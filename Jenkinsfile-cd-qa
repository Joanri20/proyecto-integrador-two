    node {
        stage('Checkout') {
            git 'https://github.com/Joanri20/proyecto-integrador-two.git'
        }

        stage('Install dependencies') {
            powershell 'mvn clean install'
        }

        stage('Compile') {
            powershell 'mvn compile'
        }

        stage('Unit and Integration Tests') {
            powershell 'mvn test'
        }

        stage('Static Code Analysis') {
            withSonarQubeEnv('sonarqube'){
                powershell 'mvn clean package sonar:sonar'
            }
        }
        stage("Quality Gate"){
            timeout(time: 3, unit: 'MINUTES') { // Just in case something goes wrong, pipeline will be killed after a timeout
                def qg = waitForQualityGate() // Reuse taskId previously collected by withSonarQubeEnv
                if (qg.status != 'OK') {
                    error "Pipeline aborted due to quality gate failure: ${qg.status}"
                }
            }
        }

        stage('Build Artifact') {
            powershell 'mvn package'
        }

        stage('Deploy QA') {
            powershell '''
                if (docker ps -a -f name=proyectointegradortwoqa) {
                    docker stop proyectointegradortwoqa
                    docker rm proyectointegradortwoqa
                }

                docker build -t proyectointegradortwoqa .
                docker run -d -p 8084:8080 --name proyectointegradortwoqa proyectointegradortwoqa
            '''
        }

    }